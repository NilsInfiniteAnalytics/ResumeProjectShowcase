@page "/OpenMeteoInteractive"
@inject DialogService DialogService

<PageTitle>Open Meteo Interactive Page - Under Construction</PageTitle>

<RadzenGoogleMap style="height: 100%"
                 Zoom="@_zoom"
                 ApiKey="AIzaSyAaAyWRr-uflaYNL6jytN_K1ubG-oeLdgk"
                 Center="@(new GoogleMapPosition() { Lat = _markerPosition.Latitude, Lng = _markerPosition.Longitude })"
                 MapClick="OnMapClick"
                 MarkerClick="OnMarkerClick">
    <Markers>
        <RadzenGoogleMapMarker Title="Selection"
                               Label="Selected Location"
                               Position="@(new GoogleMapPosition() { Lat = _markerPosition.Latitude, Lng = _markerPosition.Longitude })" />
    </Markers>
</RadzenGoogleMap>

<RadzenFieldset Legend="Select Date Range">
    <RadzenDatePicker TValue="DateTime?" @bind-Value="_startDate" Placeholder="Start Date" />
    <RadzenDatePicker TValue="DateTime?" @bind-Value="_endDate" Placeholder="End Date" />
</RadzenFieldset>

<RadzenDialog></RadzenDialog>

@code {
    private LatLng _markerPosition = new() { Latitude = 43.258509, Longitude = -77.606445 };
    private DateTime? _startDate;
    private DateTime? _endDate;
    private readonly int _zoom = 10;

    private void OnMapClick(GoogleMapClickEventArgs args)
    {
        _markerPosition.Latitude = args.Position.Lat;
        _markerPosition.Longitude = args.Position.Lng;
        StateHasChanged();
    }

    private async Task OnMarkerClick()
    {
        try
        {
            await DialogService.OpenAsync<WeatherDataDialog>(
            "Request Weather Data",
            new Dictionary<string, object>
                    {
                        { "LatLng", _markerPosition },
                    },
            new DialogOptions { Width = "50vw", Height = "25vh" });
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
}