@page "/WeatherDataDialog"
@inject DialogService DialogService
@inject NotificationService NotificationService

<RadzenFieldset Legend="Select Date Range">
    <RadzenDatePicker TValue="DateTime?" @bind-Value="_startDate" Placeholder="Start Date" />
    <RadzenDatePicker TValue="DateTime?" @bind-Value="_endDate" Placeholder="End Date" />
</RadzenFieldset>

<RadzenButton Text="Submit" Click="Submit" />
<RadzenButton Text="Cancel" Click="Cancel" />

@code {
    [Parameter] 
    public LatLng LatLng { get; set; }
    [Parameter] 
    public EventCallback<(DateTime StartDate, DateTime EndDate)> GetWeatherData { get; set; }

    private DateTime? _startDate;
    private DateTime? _endDate;

    private async Task Submit()
    {
        if(_endDate > _startDate)
        {
            await GetWeatherData.InvokeAsync((_startDate.Value, _endDate.Value));
            DialogService.Close();
        }
        else
        {
            NotificationService.Notify(NotificationSeverity.Warning, "Warning", "End date must be greater than start date.");
        }
        if (_startDate.HasValue && _endDate.HasValue)
        {
            await GetWeatherData.InvokeAsync((_startDate.Value, _endDate.Value));
            DialogService.Close();
        }
        else
        {
            NotificationService.Notify(NotificationSeverity.Warning, "Warning", "Please select both start and end dates.");
        }
    }

    private void Cancel()
    {
        DialogService.Close();
    }
}