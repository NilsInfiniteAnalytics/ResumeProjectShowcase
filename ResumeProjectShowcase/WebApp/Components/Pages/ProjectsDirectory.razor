@page "/ProjectsDirectory"
@inject NavigationManager NavigationManager

<PageTitle>Projects Directory</PageTitle>

<div class="text-center">
    <h1>Welcome to My Projects!</h1>
    <p>Explore the projects I've been working on.</p>

    <div style="margin-top: 40px;">
        <RadzenButton Text="Go Home" Click="NavigateToHome" ButtonStyle="ButtonStyle.Info" />
        <RadzenButton Text="Contact Me" Click="HandleContactMe" ButtonStyle="ButtonStyle.Success" Style="margin-left: 10px;" />
    </div>

    <div class="projects-table" style="margin-top: 40px;">
        <RadzenGrid Data="@_projects" TItem="Project">
            <Columns>
                <RadzenGridColumn TItem="Project" Property="Name" Title="Project Name" />
                <RadzenGridColumn TItem="Project" Property="Description" Title="Description" Width="50vw"/>
                <RadzenGridColumn TItem="Project" Context="project">
                    <Template Context="project">
                        <RadzenButton Text="Open" Click="@(args => { if (project.Url != null) { OpenProject(project.Url); } })" ButtonStyle="ButtonStyle.Primary" />
                    </Template>
                </RadzenGridColumn>
            </Columns>
        </RadzenGrid>
    </div>
</div>

@code {
    private readonly List<Project> _projects = new()
    {
        new Project
        {
            Name = "Open Meteo Interactive Page",
            Description = "An interactive page to fetch and display weather data using the Open Meteo API.",
            Url = "/OpenMeteoInteractive"
        }
    };

    void NavigateToHome()
    {
        NavigationManager.NavigateTo(uri: "/");
    }

    void HandleContactMe()
    {
        const string mailtoUrl = "mailto:c.a.popovich@gmail.com?subject=Contact from My Portfolio&body=Hi, I'd like to discuss...";
        NavigationManager.NavigateTo(mailtoUrl, forceLoad: true);
    }

    void OpenProject(string url)
    {
        NavigationManager.NavigateTo(url);
    }

    public class Project
    {
        public string? Name { get; set; }
        public string? Description { get; set; }
        public string? Url { get; set; }
    }
}